# This is a basic workflow to help you get started with Actions

name: Deploy to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
#  pull_request:
#    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy-to-github-pages:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 5.0.x
      # Runs a single command using the runners shell
      - name: Publish .NET Core Project
        run: dotnet publish BlazorMatchGame/BlazorMatchGame.csproj -c Release -o release --nologo

# changes the base-tag in index.html from '/' to 'BlazorGitHubPagesDemo' to match GitHub Pages repository subdirectory
      - name: Change base-tag in index.html from / to BlazorMatchGameMac
        run: sed -i 's/<base href="\/" \/>/<base href="\/BlazorMatchGameMac\/" \/>/g' release/wwwroot/index.html
        
# add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
      
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: release/wwwroot
          
